extends ../layout

block styles
    link(rel='stylesheet' href='/stylesheets/css/profile.css')
    link(rel='stylesheet' href='/summernote/summernote.css')

block title
    title #{__('tickets.title')}

block content
    include ../navbar
    .container
        br
        .row
            .col.s12#userTicket
                .card.center
                    .card-image
                        a.btn-floating.halfway-fab.waves-effect.waves-light.cancelButtonBackground-background-colour.cancelButtonText-colour.left(href=`/project/${projectId}/team/${teamId}`)
                            i.material-icons arrow_back
                    .card-content
                        .input-field.padding-10
                            input.validate(type='text', name='titleField', value=`${ticket.title}`)#titleField
                            label(for='titleField') #{__('tickets.ticketTitle')}
                    .card-action
                        .row
                            .col.s12.l8.padding-10.margin-10.secondaryColour-border-colour
                                .row
                                    .input-field.padding-10.col.s12.m3
                                        select#typeSelection
                                            option(value=0, selected=ticket.type===0)
                                                | #{__('tickets.types.bug')}
                                            option(value=1, selected=ticket.type===1)
                                                | #{__('tickets.types.story')}
                                            option(value=2, selected=ticket.type===2)
                                                | #{__('tickets.types.milestone')}
                                        label
                                            | #{__('tickets.type')}
                                    .input-field.padding-10.col.s12.m3
                                        select#stateSelection
                                            option(value=0, selected=ticket.state===0)
                                                | #{__('tickets.states.new')}
                                            option(value=1, selected=ticket.state===1)
                                                | #{__('tickets.states.in_development')}
                                            option(value=2, selected=ticket.state===2)
                                                | #{__('tickets.states.code_review')}
                                            option(value=3, selected=ticket.state===3)
                                                | #{__('tickets.states.ready_for_test')}
                                            option(value=4, selected=ticket.state===4)
                                                | #{__('tickets.states.in_test')}
                                            option(value=5, selected=ticket.state===5)
                                                | #{__('tickets.states.done')}
                                        label
                                            | #{__('tickets.state')}
                                    .input-field.padding-10.col.s12.m3
                                        select#prioritySelection
                                            option(value=0, selected=ticket.priority===0)
                                                | #{__('tickets.priorities.low')}
                                            option(value=1, selected=ticket.priority===1)
                                                | #{__('tickets.priorities.medium')}
                                            option(value=2, selected=ticket.priority===2)
                                                | #{__('tickets.priorities.high')}
                                        label
                                            | #{__('tickets.priority')}
                                    .input-field.padding-10.col.s12.m3
                                        input(type='number', name='pointsSelection', min='1', max='10', value=ticket.points)#pointsSelection
                                        label(for='pointsSelection') #{__('tickets.points')}
                                .row
                                    .input-field.padding-10
                                        label(for='description') #{__('tickets.description')}
                                    .input-field.padding-10
                                        #description #{ticket.description}
                                .row.subtasksRow
                                    .input-field.padding-10#subtasksSelection
                                        input.validate(type='text', name='subtasks')
                                        label(for='description') #{__('tickets.subtasks')}
                                .row.milestoneIssuesRow
                                    .input-field.padding-10#milestoneIssuesSelection
                                        input.validate(type='text', name='milestoneIssues')
                                        label(for='milestoneIssues') #{__('tickets.milestoneIssues')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')
                                        label(for='autocomplete-input') #{__('tickets.relatedTickets')}
                            .col.s12.l4
                                .row
                                    .input-field.padding-10
                                        input(type='text', value=`${reporter}`, disabled)
                                        label(for='autocomplete-input') #{__('tickets.reporter')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text', value=`${assignee}`, name='assigneeAutocomplete')#assigneeAutocomplete
                                        label(for='assigneeAutocomplete') #{__('tickets.assignee')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')
                                        label(for='autocomplete-input') #{__('tickets.release')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')
                                        label(for='autocomplete-input')  #{__('tickets.sprints')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')
                                        label(for='autocomplete-input')  #{__('tickets.tags')}
                        .row
                            button.waves-effect.waves-light.btn.primaryColour-background-colour#saveTicketButton #{__('actions.save')}
                                i.material-icons.right save
        .row
            ul.collection
                each comment in comments
                    li.collection-item.avatar
                        img.circle(src=`/profilePicture/${user.picture}`, alt='')
                        if comment.username === user.username
                            button.waves-effect.waves-light.btn.right.primaryColour-background-colour#removeComment #{__('actions.delete')}
                                i.material-icons.right close
                        span.title #{comment.username}
                        p
                            | #{comment.content}
        .row
            .col.s12
                .input-field
                    textarea.materialize-textarea#newComment
                    label(for="newComment")
                        | #{__('tickets.writeComment')}
                button.waves-effect.waves-light.btn.primaryColour-background-colour#addNewComment #{__('actions.comment')}
                    i.material-icons.right add

block scripts
    script(src='/js/tickets/tickets-edit.js')
    script(src='/summernote/summernote.js')