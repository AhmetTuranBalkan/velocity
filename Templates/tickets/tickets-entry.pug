extends ../layout

block styles
    link(rel='stylesheet' href='/stylesheets/css/tickets.css')
    link(rel='stylesheet' href='/summernote/summernote.css')

block title
    title #{__('tickets.title')}

block content
    include ../navbar
    .container
        br
        .row
            .col.s12#userTicket
                .card.center
                    .card-image
                        a.btn-floating.halfway-fab.waves-effect.waves-light.cancelButtonBackground-background-colour.cancelButtonText-colour.left(href=`/project/${projectId}/team/${teamId}`)
                            i.material-icons arrow_back
                    .card-content
                        .input-field.padding-10
                            input.validate(type='text', name='name')#titleField
                            label(for='name') #{__('tickets.ticketTitle')}
                    .card-action
                        .row
                            .col.s12.l8.padding-10.margin-10.secondaryColour-border-colour
                                .row
                                    .input-field.padding-10.col.s12.m3
                                        select.icons#typeSelection
                                            option(value=0, data-icon='/img/icon-ladybird.png', selected)
                                                | #{__('tickets.types.bug')}
                                            option(value=1, data-icon='/img/icon-code-file.png')
                                                | #{__('tickets.types.story')}
                                            option(value=2, data-icon='/img/icon-purchase-order.png')
                                                | #{__('tickets.types.milestone')}
                                        label
                                            | #{__('tickets.type')}
                                    .input-field.padding-10.col.s12.m3
                                        select#stateSelection
                                            option(value=0, selected)
                                                | #{__('tickets.states.new')}
                                            option(value=1)
                                                | #{__('tickets.states.in_development')}
                                            option(value=2)
                                                | #{__('tickets.states.code_review')}
                                            option(value=3)
                                                | #{__('tickets.states.ready_for_test')}
                                            option(value=4)
                                                | #{__('tickets.states.in_test')}
                                            option(value=5)
                                                | #{__('tickets.states.done')}
                                        label
                                            | #{__('tickets.state')}
                                    .input-field.padding-10.col.s12.m3
                                        select.icons#prioritySelection
                                            option.circle(value=0, data-icon='/img/icon-low-priority.png', selected)
                                                | #{__('tickets.priorities.low')}
                                            option.circle(value=1, data-icon='/img/icon-medium-priority.png')
                                                | #{__('tickets.priorities.medium')}
                                            option.circle(value=2, data-icon='/img/icon-high-priority.png')
                                                | #{__('tickets.priorities.high')}
                                        label
                                            | #{__('tickets.priority')}
                                    .input-field.padding-10.col.s12.m3
                                        input(type='number', name='quantity', min='1', max='10', value='0')#pointsSelection
                                        label
                                            | #{__('tickets.points')}
                                .row
                                    .input-field.padding-10
                                        label(for='description') #{__('tickets.description')}
                                    .input-field.padding-10
                                        #description
                                    .input-field.padding-10
                                        #attachmentsDivId
                                if false
                                    .row.subtasksRow
                                        .input-field.padding-10#subtasksSelection
                                            input.validate(type='text', name='subtasks')
                                            label(for='description') #{__('tickets.subtasks')}
                                .row.milestoneIssuesRow
                                    .input-field.padding-10#milestoneIssuesSelection
                                        input.validate(type='text', name='milestoneIssues')
                                        label(for='milestoneIssues') #{__('tickets.milestoneIssues')}
                                .row
                                    .input-field.col.s4
                                        select#relatedSelectedInput
                                            option(value='0') #{__('tickets.relation.blocks')}
                                            option(value='1') #{__('tickets.relation.blocked_by')}
                                            option(value='2') #{__('tickets.relation.duplicates')}
                                            option(value='3') #{__('tickets.relation.duplicated_by')}
                                            option(value='4') #{__('tickets.relation.fixes')}
                                            option(value='5') #{__('tickets.relation.fixed_by')}
                                        label #{__('tickets.relation.label')}
                                    .input-field.col.s6
                                        input#relatedInput.validate(type='text')
                                        label(for='relatedInput') #{__('tickets.id')}
                                    .input-field.col.s2
                                        button.btn.btn-flat.waves-effect.waves-light.right.no-text-flat-buttons(onclick='saveLinkFunction()')#saveLinkButton
                                            i.material-icons.right save
                                .row
                                    .input-field.padding-10#relatedTicketDivId
                            .col.s12.l4
                                .row
                                    .input-field.padding-10
                                        input(type='text', value=`${reporter}`, disabled)
                                        label(for='autocomplete-input') #{__('tickets.reporter')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text', value=`${assignee}`)#assigneeAutocomplete
                                        label(for='assigneeAutocomplete') #{__('tickets.assignee')}
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')#releasesAutocomplete
                                        label(for='releasesAutocomplete') #{__('tickets.release')}
                                .row
                                    .input-field.padding-10#ticketReleasesDivId
                                if isScrumBoardType
                                    .row
                                        .input-field.padding-10
                                            input.autocomplete(type='text')#sprintsAutocomplete
                                            label(for='sprintsAutocomplete')  #{__('tickets.sprints')}
                                    .row
                                        .input-field.padding-10#ticketSprintsDivId
                                .row
                                    .input-field.padding-10
                                        input.autocomplete(type='text')#tagsAutocomplete
                                        label(for='tagsAutocomplete')  #{__('tickets.tags')}
                                .row
                                    .input-field.padding-10#ticketTagsDivId
                        .row
                            button.waves-effect.waves-light.btn.primaryColour-background-colour#createTicketButton #{__('actions.create')}
                                i.material-icons.right add

    #uploadModal.modal
        .modal-content
            i.modal-action.modal-close.material-icons#closeModal(onclick='cancelling=true;') close
            h3 #{__('uploadModal.title')}
                .row
                    .col.s12
                        .row
                            .file-field.input-field
                                .btn.primaryColour-background-colour.primaryTextOnPrimary-colour
                                    span
                                        | #{__('uploadModal.file')}
                                    input(type='file')#file-input
                                .file-path-wrapper
                                    input.file-path.validate(type='text', placeholder=__('uploadModal.selectFile'))#file-name
                        .row.right
                            .btn.waves-effect.waves-light.btn.col.primaryColour-background-colour.primaryTextOnPrimary-colour(onclick='uploadFile()')#uploadButton #{__('uploadModal.upload')}
                                i.material-icons.right cloud_upload
block scripts
    script(src='/js/tickets/tickets-entry.js')
    script(src='/summernote/summernote.js')