br
.row
    form.col.s12#userTicket
        .card.center
            .card-content
                .input-field.padding-10
                    input.validate(type='text', name='name', required autofocus)
                    label(for='name') #{__('tickets.ticketName')}
            .card-action
                .row
                    .col.s8.barrier-right.padding-10.margin-10.secondaryColour-border-colour
                        .row
                            .col.s6
                                .row
                                    .input-field.padding-10
                                        select#typeSelection
                                            option(value='bug' selected)
                                                | #{__('tickets.types.bug')}
                                            option(value='milestone')
                                                | #{__('tickets.types.milestone')}
                                            option(value='story')
                                                | #{__('tickets.types.story')}
                                        label
                                            | #{__('tickets.type')}
                                .row
                                    .input-field.padding-10
                                        select
                                            option(value='' disabled selected)
                                                | #{__('tickets.priority')}
                                .row
                                    .input-field.padding-10
                                        select(multiple)
                                            option(value='' disabled selected)
                                                | #{__('tickets.tags')}
                            .col.s6
                                .row
                                    .input-field.padding-10
                                        select
                                            option(value='' disabled selected)
                                                | #{__('tickets.status')}
                                .row
                                    .input-field.padding-10
                                        select(multiple)
                                            option(value='' disabled selected)
                                                | #{__('tickets.sprints')}
                                .row
                                    .input-field.padding-10
                                        select(multiple)
                                            option(value='' disabled selected)
                                                | #{__('tickets.points')}
                        .row
                            .input-field.padding-10
                                #description
                        .row.subtasksRow
                            .input-field.padding-10#subtasksSelection
                                input.validate(type='text', name='subtasks')
                                label(for='description') #{__('tickets.subtasks')}
                        .row.milestoneIssuesRow
                            .input-field.padding-10#milestoneIssuesSelection
                                input.validate(type='text', name='milestoneIssues')
                                label(for='milestoneIssues') #{__('tickets.milestoneIssues')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.relatedTickets')}
                    .col.s4
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.reporter')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.assigned')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.release')}
                    