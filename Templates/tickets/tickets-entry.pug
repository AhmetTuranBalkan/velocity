br
.row
    form.col.s12#userTicket
        .card.center
            .card-image
                a.btn-floating.halfway-fab.waves-effect.waves-light.cancelButtonBackground-background-colour.cancelButtonText-colour.left(href=`/project/${projectId}/team/${teamId}`)
                    i.material-icons arrow_back
            .card-content
                .input-field.padding-10
                    input.validate(type='text', name='name', required autofocus)
                    label(for='name') #{__('tickets.ticketTitle')}
            .card-action
                .row
                    .col.s12.l8.padding-10.margin-10.secondaryColour-border-colour
                        .row
                            .input-field.padding-10.col.s12.m3
                                select#typeSelection
                                    option(value=0, selected)
                                        | #{__('tickets.types.bug')}
                                    option(value=1)
                                        | #{__('tickets.types.story')}
                                    option(value=2)
                                        | #{__('tickets.types.milestone')}
                                label
                                    | #{__('tickets.type')}
                            .input-field.padding-10.col.s12.m3
                                select#stateSelection
                                    option(value=0, selected)
                                        | #{__('tickets.states.new')}
                                    option(value=1)
                                        | #{__('tickets.states.in_development')}
                                    option(value=2)
                                        | #{__('tickets.states.code_review')}
                                    option(value=3)
                                        | #{__('tickets.states.ready_for_test')}
                                    option(value=4)
                                        | #{__('tickets.states.in_test')}
                                    option(value=5)
                                        | #{__('tickets.states.done')}
                                label
                                    | #{__('tickets.state')}
                            .input-field.padding-10.col.s12.m3
                                select#prioritySelection
                                    option(value=0, selected)
                                        | #{__('tickets.priorities.low')}
                                    option(value=1)
                                        | #{__('tickets.priorities.medium')}
                                    option(value=2)
                                        | #{__('tickets.priorities.high')}
                                label
                                    | #{__('tickets.priority')}
                            .input-field.padding-10.col.s12.m3
                                select#pointsSelection
                                    option(value=1) 1
                                    option(value=2) 2
                                    option(value=4, selected) 4
                                    option(value=8) 8
                                    option(value=16) 16
                                    option(value=32) 32
                                label
                                    | #{__('tickets.points')}
                        .row
                            .input-field.padding-10
                                label(for='description') #{__('tickets.description')}
                            .input-field.padding-10
                                #description
                        .row.subtasksRow
                            .input-field.padding-10#subtasksSelection
                                input.validate(type='text', name='subtasks')
                                label(for='description') #{__('tickets.subtasks')}
                        .row.milestoneIssuesRow
                            .input-field.padding-10#milestoneIssuesSelection
                                input.validate(type='text', name='milestoneIssues')
                                label(for='milestoneIssues') #{__('tickets.milestoneIssues')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.relatedTickets')}
                    .col.s12.l4
                        .row
                            .input-field.padding-10
                                input(type='text', value=`${reporter}`, disabled)
                                label(for='autocomplete-input') #{__('tickets.reporter')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text', value=`${assignee}`)#assigneeAutocomplete
                                label(for='autocomplete-input') #{__('tickets.assignee')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input') #{__('tickets.release')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input')  #{__('tickets.sprints')}
                        .row
                            .input-field.padding-10
                                input.autocomplete(type='text')
                                label(for='autocomplete-input')  #{__('tickets.tags')}
                .row
                    button.waves-effect.waves-light.btn.primaryColour-background-colour#createTicketButton #{__('actions.create')}
                        i.material-icons.right add